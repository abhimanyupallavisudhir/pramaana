#compdef pramaana

_pramaana() {
    local -a commands
    commands=(
        'new:Create new reference'
        'edit:Edit existing reference'
        'find:Search for references'
        'import:Import from Zotero'
        'export:Run exports'
        'ls:List references'
        'rm:Remove reference'
        'trash:Move to trash'
        'show:Show contents'
        'open:Open with default application'
    )

    local curcontext="$curcontext" state line
    typeset -A opt_args

    # Cache the data directory path
    if [[ -z "$_pramaana_data_dir" ]]; then
        _pramaana_data_dir=$(python3 -c '
import json, os
try:
    with open(os.path.expanduser("~/.pramaana/config.json")) as f:
        print(os.path.expanduser(json.load(f)["pramaana_path"]))
except: print("")
' 2>/dev/null)
    fi

    _arguments -C \
        '1: :->command' \
        '*: :->args'

    case $state in
        command)
            _describe -t commands 'pramaana commands' commands
            ;;
        args)
            case $words[2] in
                ls|rm|trash|show|open)
                    if [[ -n "$_pramaana_data_dir" ]]; then
                        _path_files -W "$_pramaana_data_dir"
                    fi
                    ;;
                export)
                    # Only read exports when actually completing export command
                    local -a exports
                    exports=( ${(f)"$(python3 -c '
import json, os
try:
    with open(os.path.expanduser("~/.pramaana/config.json")) as f:
        config = json.load(f)
        for name in config["exports"].keys():
            print(name)
except: pass
' 2>/dev/null)"} )
                    _values 'exports' $exports
                    ;;
            esac
            ;;
    esac
}

# Cache initialization - only do expensive operations once
_pramaana_cache_init() {
    typeset -g _pramaana_data_dir
}
_pramaana_cache_init

_pramaana "$@"